<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-kafka="http://www.springframework.org/schema/integration/kafka"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/kafka http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd
        http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

	<!-- int:channel是配置Spring Integration Channel, 此channel基于queue。 int-kafka:outbound-channel-adapter是outbound-channel-adapter对象， 
		内部使用一个线程池处理消息。关键是kafka-producer-context-ref。 int-kafka:producer-context配置producer列表，要处理的topic，这些Producer最终要转换成Kafka的Producer。 -->

<!-- 
Spring Integration Kafka 也提供了个基于Avro的Encoder。 Avro也是Apache的一个项目， 在大数据处理时也是一个常用的序列化框架。 
不指定Encoder将使用Kafka缺省的Encoder (kafka.serializer.DefaultEncoder, byte[] –> same byte[])。
 -->
	<int:channel id="inputToKafka">
		<int:queue />
	</int:channel>
	<int-kafka:outbound-channel-adapter
		id="kafkaOutboundChannelAdapter" kafka-producer-context-ref="kafkaProducerContext"
		auto-startup="false" channel="inputToKafka" order="3">
		<int:poller fixed-delay="1000" time-unit="MILLISECONDS"
			receive-timeout="0" task-executor="taskExecutor" />
	</int-kafka:outbound-channel-adapter>
	<task:executor id="taskExecutor" pool-size="5"
		keep-alive="120" queue-capacity="500" />
	<bean id="producerProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="topic.metadata.refresh.interval.ms">3600000</prop>
				<prop key="message.send.max.retries">5</prop>
				<prop key="serializer.class">kafka.serializer.StringEncoder</prop>
				<prop key="request.required.acks">1</prop>
			</props>
		</property>
	</bean>
	<int-kafka:producer-context id="kafkaProducerContext"
		producer-properties="producerProperties">
		<int-kafka:producer-configurations>
			<int-kafka:producer-configuration
				broker-list="localhost:9092" topic="test" compression-codec="default" />
		</int-kafka:producer-configurations>
	</int-kafka:producer-context>
</beans>